// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mwsconfig/mwsconfig.proto

package mwsconfig

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MWSConfig struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserID               string   `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	SellerID             string   `protobuf:"bytes,3,opt,name=SellerID,proto3" json:"SellerID,omitempty"`
	MarketplaceID        string   `protobuf:"bytes,4,opt,name=MarketplaceID,proto3" json:"MarketplaceID,omitempty"`
	BaseURL              string   `protobuf:"bytes,5,opt,name=BaseURL,proto3" json:"BaseURL,omitempty"`
	SignatureVersion     string   `protobuf:"bytes,6,opt,name=SignatureVersion,proto3" json:"SignatureVersion,omitempty"`
	SignatureMethod      string   `protobuf:"bytes,7,opt,name=SignatureMethod,proto3" json:"SignatureMethod,omitempty"`
	AuthToken            string   `protobuf:"bytes,8,opt,name=AuthToken,proto3" json:"AuthToken,omitempty"`
	AccessKey            string   `protobuf:"bytes,9,opt,name=AccessKey,proto3" json:"AccessKey,omitempty"`
	AccessSecret         string   `protobuf:"bytes,10,opt,name=AccessSecret,proto3" json:"AccessSecret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MWSConfig) Reset()         { *m = MWSConfig{} }
func (m *MWSConfig) String() string { return proto.CompactTextString(m) }
func (*MWSConfig) ProtoMessage()    {}
func (*MWSConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_07b380766a1cf088, []int{0}
}

func (m *MWSConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MWSConfig.Unmarshal(m, b)
}
func (m *MWSConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MWSConfig.Marshal(b, m, deterministic)
}
func (m *MWSConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MWSConfig.Merge(m, src)
}
func (m *MWSConfig) XXX_Size() int {
	return xxx_messageInfo_MWSConfig.Size(m)
}
func (m *MWSConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MWSConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MWSConfig proto.InternalMessageInfo

func (m *MWSConfig) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *MWSConfig) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *MWSConfig) GetSellerID() string {
	if m != nil {
		return m.SellerID
	}
	return ""
}

func (m *MWSConfig) GetMarketplaceID() string {
	if m != nil {
		return m.MarketplaceID
	}
	return ""
}

func (m *MWSConfig) GetBaseURL() string {
	if m != nil {
		return m.BaseURL
	}
	return ""
}

func (m *MWSConfig) GetSignatureVersion() string {
	if m != nil {
		return m.SignatureVersion
	}
	return ""
}

func (m *MWSConfig) GetSignatureMethod() string {
	if m != nil {
		return m.SignatureMethod
	}
	return ""
}

func (m *MWSConfig) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

func (m *MWSConfig) GetAccessKey() string {
	if m != nil {
		return m.AccessKey
	}
	return ""
}

func (m *MWSConfig) GetAccessSecret() string {
	if m != nil {
		return m.AccessSecret
	}
	return ""
}

func init() {
	proto.RegisterType((*MWSConfig)(nil), "mwsconfig.MWSConfig")
}

func init() { proto.RegisterFile("mwsconfig/mwsconfig.proto", fileDescriptor_07b380766a1cf088) }

var fileDescriptor_07b380766a1cf088 = []byte{
	// 269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0xd1, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0x06, 0x70, 0x9a, 0xf7, 0x35, 0x6d, 0x06, 0xff, 0x31, 0x07, 0x19, 0xc5, 0x83, 0x14, 0x0f,
	0xa5, 0x48, 0x73, 0xf0, 0x13, 0x58, 0x73, 0x09, 0x9a, 0x4b, 0x63, 0x15, 0xbc, 0xa5, 0xeb, 0x34,
	0x09, 0x4d, 0xb3, 0x65, 0x77, 0x83, 0xf4, 0x03, 0xfa, 0xbd, 0xa4, 0x63, 0x9b, 0x52, 0xbd, 0xe5,
	0xf9, 0x3d, 0x0f, 0x04, 0x66, 0xe1, 0x72, 0xf9, 0x69, 0x95, 0xae, 0xe7, 0x65, 0x1e, 0xb6, 0x5f,
	0xa3, 0x95, 0xd1, 0x4e, 0x63, 0xd0, 0x42, 0xff, 0xcb, 0x83, 0x20, 0x79, 0x4b, 0x1f, 0x25, 0xe1,
	0x29, 0x78, 0x71, 0x44, 0x9d, 0x9b, 0xce, 0x20, 0x98, 0x78, 0x71, 0x84, 0x17, 0xe0, 0x4f, 0x2d,
	0x9b, 0x38, 0x22, 0x4f, 0x6c, 0x9b, 0xf0, 0x0a, 0x7a, 0x29, 0x57, 0x95, 0x34, 0xff, 0xa4, 0x69,
	0x33, 0xde, 0xc2, 0x49, 0x92, 0x99, 0x05, 0xbb, 0x55, 0x95, 0x29, 0x8e, 0x23, 0xfa, 0x2f, 0x83,
	0x43, 0x44, 0x82, 0xee, 0x38, 0xb3, 0x3c, 0x9d, 0x3c, 0xd3, 0x91, 0xf4, 0xbb, 0x88, 0x43, 0x38,
	0x4f, 0xcb, 0xbc, 0xce, 0x5c, 0x63, 0xf8, 0x95, 0x8d, 0x2d, 0x75, 0x4d, 0xbe, 0x4c, 0xfe, 0x38,
	0x0e, 0xe0, 0xac, 0xb5, 0x84, 0x5d, 0xa1, 0x3f, 0xa8, 0x2b, 0xd3, 0xdf, 0x8c, 0xd7, 0x10, 0x3c,
	0x34, 0xae, 0x78, 0xd1, 0x0b, 0xae, 0xa9, 0x27, 0x9b, 0x3d, 0x48, 0xab, 0x14, 0x5b, 0xfb, 0xc4,
	0x6b, 0x0a, 0xb6, 0xed, 0x0e, 0xb0, 0x0f, 0xc7, 0x3f, 0x21, 0x65, 0x65, 0xd8, 0x11, 0xc8, 0xe0,
	0xc0, 0xc6, 0x77, 0xef, 0xc3, 0xbc, 0x74, 0x45, 0x33, 0x1b, 0x29, 0xbd, 0x0c, 0xed, 0xba, 0x56,
	0xf3, 0x66, 0xf3, 0xfb, 0xcd, 0xed, 0x43, 0xb9, 0xba, 0xda, 0x3f, 0xc3, 0xcc, 0x17, 0xb9, 0xff,
	0x0e, 0x00, 0x00, 0xff, 0xff, 0x4f, 0x74, 0x04, 0x51, 0xa4, 0x01, 0x00, 0x00,
}
